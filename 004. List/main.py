# 리스트는 배열과 비슷하다.
# 리스트명 = [요소1, 요소2, 요소3, .....]

a = []  # 비어 있는 리스트는 a = list()로 생성 할 수도 있다.
b = [1, 2, 3]  # 숫자를 요소로 가진 리스트
c = ['Life', 'is', 'too', 'short']  # 문자열을 요소로 가진 리스트
d = [1, 2, 'Life', 'is']  # 숫자, 문자열을 요소로 가진 리스트
e = [1, 2, ['Life', 'is']]  # 리스트를 요소로 가진 리스트

# 리스트 인덱싱과 슬라이싱
# 문자열 인덱싱과 슬라이싱과 비슷하다.

# 인덱싱
a = [1, 2, 3]
print(a)
print(a[0])
print(a[1])
print(a[-1])  # 이것 또한 문자열 인덱싱과 같이 -1은 a의 마지막 요소다.
print(a[0] + a[2])

a = [1, 2, 3, ['a', 'b', 'c']]
print(a[0])  # 1 출력
print(a[-1])  # 마지막 요소인 ['a', 'b', 'c'] 출력
print(a[3])  # 마찬가지로 마지막 요소인 ['a', 'b', 'c'] 출력

# 그러면 마지막 요소 'a'를 꺼낼려면 어떻게 해야될까?
# 이렇게 하면 된다.
print(a[-1][0])
print(a[-1][1])
print(a[-1][2])

# 삼중 리스트와 인덱싱 - 딱히 사용하지 않을 거 같다.
a = [1, 2, ['a', 'b', ['Life', 'is']]]
print(a[2][2][0]) # 들어가고 들어가고 들어가고 찾는다고 생각하면 될 거 같다.

# 리스트의 슬라이싱

# 리시트에서의 슬라이싱
a = [1, 2, 3, 4, 5]
print(a[0:2])
# 문자열에서의 슬라이싱
a = "12345"
print(a[0:2])
# 서로 사용법이 같다는 것을 알 수 있다.
a = [1, 2, 3, 4, 5]
print(a[:2])
print(a[2:])

# 중첩된 리스트에서 슬라이싱
a = [1, 2, 3, ['a', 'b', 'c'], 4, 5]
print(a[2:5])  # 슬라이싱 방법은 같다.
print(a[3][:2])  # 인덱스 3번에 있는 리스트에 가서 인덱스 2까지 슬라이싱

# 리스트 연산자

# 더하기
a = [1, 2, 3]
b = [4, 5, 6]
print(a + b)

# 리스트 반복
a = [1, 2, 3]
print(a * 3)  # a 리스트를 3번 반복

# 리스트 수정, 변경과 삭제

# 수정하기

# 하나만 수정
a = [1, 2, 3]
a[2] = 4

# 연속된 범위의 값 수정
a = [1, 2, 3]
a[1:2] = ['a', 'b', 'c']
# a[1:2]는 a[1] 부터 a[2] 까지기 때문에 인덱스 a[1]의 값인 2를 말함.
# 그래서 a[1] 에 리스트 ['a', 'b', 'c'] 로 수정 됨.
print(a)
# a[1:2] = ['a', 'b', 'c']로 수정하는 것과
# a[1] = ['a', 'b', 'c']로 수정하는 것은
# 전혀 다른 결과값을 갖게 되므로 주의해야 한다.
a = [1, 2, 3]
a[1:2] = ['a', 'b', 'c']
print(a)  # a[1:2]는 a[1]에서 a[2] 사이의 리스트를 ['a', 'b', 'c']로 바꾼다는 말
a = [1, 2, 3]
a[1] = ['a', 'b', 'c']
print(a)  # a[1] = ['a', 'b', 'c']는 리스트 a의 두 번째 요소를 ['a', 'b','c']로 바꾼다는 말

# 삭제하기

# [] 사용해서 요소 삭제
a = [1, 2, 3, 4, 5]
a[1:3] = []
print(a)  # 2, 3 사라졌다.

# del 함수로 요소 삭제
a = [1, 2, 3]
del a[1]
print(a)

a = [1, 2, 3, 4, 5]
del a[1:3]
print(a)

# 리스트 관련 함수

# 요수 추가 append
a = [1, 2, 3]
a.append(4)  # 리스트 맨 마지막에 요소 추가
print(a)  # [1, 2, 3, 4]

a.append([5, 6])  # 리스트에 리스트 추가
print(a)

# 정렬 sort
a = [1, 4, 3, 2]
a.sort()  # 요소들을 오름차순으로 정렬
print(a)

a = ['a', 'c', 'b']
a.sort()  # 알파벳 순으로 정렬
print(a)

# 리스트 뒤집기 reverse
a = ['a', 'c', 'b']
a.reverse()  # 그대로 뒤집는다.
print(a)

# 요소 위치 반환
a = [1, 2, 3]
print(a.index(3))  # x의 위치값을 반환. 값을 못 찾으면 값 오류(ValueError)가 발생함.

# 요소 삽입 insert
a = [1, 2, 3]
a.insert(0, 4)  # a[0] 위치에 4라는 값을 삽입
print(a)

# 요소 제거
a = [1, 2, 3, 1, 2, 3]
a.remove(3)  # 리스트에서 첫번째 3만 삭제됨
print(a)
a.remove(3)  # 한번 더 하면 그다음 3이 삭제됨
print(a)

# 요소 pop 하기 pop
a = [1, 2, 3]
a.pop()  # 맨 마지막 요소를 끄집어낸다.
print(a)

a = [1, 2, 3]
a.pop(1)  # a[1] 위치의 값을 끄집어낸다.
print(a)

# 요수 x의 개수 세기 count
a = [1, 2, 3, 1]
print(a.count(1))  # 1이라는 값을 가진 요소의 개수를 반환

# 확장 extend
a = [1, 2, 3]
a.extend([4, 5])  # x에 리스트만 넣을 수 있으며, 원래의 리스트에 x 리스트를 더한다.
print(a)

b = [6, 7]
a.extend(b)
print(a)